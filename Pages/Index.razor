@page "/"

@using BlazorServerWithFluxor.Application
@using BlazorServerWithFluxor.State

@inherits FluxorComponent

@inject IState<WeatherState> State
@inject IDispatcher Dispatcher

<PageTitle>Weather Forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather Forecast</MudText>

@if (this.State.Value.IsLoading)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="this.State.Value.Data" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x => x.Date)">
                    Date
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureC)">
                    Temp. (C)
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureF)">
                    Temp. (F)
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.Summary!)">
                    Summary
                </MudTableSortLabel>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">@context.Summary</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}
